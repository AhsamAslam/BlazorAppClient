@page "/Businesses"
@page "/Businesses/{SiteID}"
@using MyCommunityBuilder.Client.Services
@using MyCommunityBuilder.Client.Shared
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILogger<Index> _logger
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject IStringLocalizer<Resource> Localizer

<div class="row">
    <JSlider Records="SliderItem"></JSlider>
</div>
<div class="row" style="height: 75px;">
    <NavMenuBar></NavMenuBar>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-12 col-sm-12 col-md-8 col-lg-8">
            <div>
                <JImage Src="@(String.Format("{0}{1}", Localizer["BaseImageUrl"], Localizer["BusinessMainImage"]))"></JImage>
            </div>
            <div>
                <JHeadingTextCard Title=@Localizer["StrengthenyourbusinessbyconvertingcustomersintofansHerehowyoubenefit"] Records="@HeadingTextCardDto"></JHeadingTextCard>
            </div>
        </div>
        <div class="col-12 col-sm-12 col-md-4 col-lg-4">
            <div>
                <JLeftImageCard Records="LeftImageCardDto"></JLeftImageCard>
            </div>
            <div>
                <JRightImageCard Records="RightImageCardDto"></JRightImageCard>
            </div>
            <div>
                <JSmallImageCard Records="SmallImageCardDto"></JSmallImageCard>
            </div>
            <div>
                <JLinksCard Title=@Localizer["MoreforBusiness"] Records="LinksCardDto"></JLinksCard>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public string SiteID { get; set; }
    public List<HeadingTextCardDto> HeadingTextCardDto = new List<HeadingTextCardDto>();
    public SmallImageCardDto SmallImageCardDto = new SmallImageCardDto();
    public List<LinksCardDto> LinksCardDto = new List<LinksCardDto>();
    public LeftImageCardDto LeftImageCardDto = new LeftImageCardDto();
    public RightImageCardDto RightImageCardDto = new RightImageCardDto();
    List<SliderItemDto> SliderItem = new List<SliderItemDto>();
    #region Authentication
    [Parameter]
    public string ID { get; set; }
    private string mfaName = "[\"mfa\"]";
    private string mfaForceText = "True";
    private Claim amrClaim;
    private Claim force2FAClaim;
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();
    private AuthenticationState authState;
    private string _authMessage;
    private string _surnameMessage;
    #endregion

    protected override async Task OnInitializedAsync()
    {
        #region Components Data
        HeadingTextCardDto = new List<HeadingTextCardDto>
{
            new HeadingTextCardDto{HeadingTextCardLink="", HeadingTextCardHeading="1. More Sales",
                                   HeadingTextCardContent = "Fans are your most loyal customers. Nurturing them will bring you more fans. And is good for your bottom line."},
            new HeadingTextCardDto{HeadingTextCardLink="", HeadingTextCardHeading="2. More Feedback",
                                   HeadingTextCardContent = " Fans will give you the best (and most constructive) advice about how to improve your business."},
            new HeadingTextCardDto{HeadingTextCardLink="", HeadingTextCardHeading="3. Future Investors",
                                   HeadingTextCardContent = "If your company ever decides to raise capital through crowdfunding, you can communicate directly and efficiently with your fans through our site."},

        };
        SmallImageCardDto = new SmallImageCardDto
        {
            SmallImageCardHeading = Localizer["WhatdoBusinessessay?"],
            SmallImageCardContent = "We were able to use the SmallStreet tools to raise $230,000 in capital for our business at a critical moment in the pandemic.",
            SmallImageCardSource = String.Format("{0}{1}", Localizer["BaseImageUrl"], Localizer["WhatdoBusinessessayImage"]),
            SmallImageCardText1 = "John Allan, CEO",
            SmallImageCardText2 = "Bugyman Exterminator"
        };
        LinksCardDto = new List<LinksCardDto>
    {
            new LinksCardDto{LinksCardLinks="", LinksCardLinksText="Business of the Week"},
            new LinksCardDto{LinksCardLinks="", LinksCardLinksText="Top Businesses"},
            new LinksCardDto{LinksCardLinks="", LinksCardLinksText="Crowdfunding Resources"},
            new LinksCardDto{LinksCardLinks="", LinksCardLinksText="Offer Deals"},
            new LinksCardDto{LinksCardLinks="/Winning", LinksCardLinksText="Who's Winning Fans?"},
            new LinksCardDto{LinksCardLinks="/LocalBusiness", LinksCardLinksText="See All Businesses"}

        };
        LeftImageCardDto = new LeftImageCardDto
        {
            LeftImageCardLink = "",
            LeftImageCardHeading = Localizer["WhoWinningtheRaceForFans?"],
            LeftImageCardSource = String.Format("{0}{1}", Localizer["BaseImageUrl"], Localizer["WhoWinningtheRaceForFansImage"]),
            LeftImageCardText = Localizer["Becomeafanfavoriteandgetawholeweekinthespotlight."]
        };
        RightImageCardDto = new RightImageCardDto
        {
            RightImageCardLink = "",
            RightImageCardSource = String.Format("{0}{1}", Localizer["BaseImageUrl"], Localizer["AreyouReadyforInvestmentCrowdfundingImage"]),
            RightImageCardHeading = Localizer["AreyouReadyforInvestmentCrowdfunding?TakeOurReadinessSurvey."]
        };
        SliderItem = new List<SliderItemDto>
        {
        new SliderItemDto{
            Source = String.Format("{0}{1}", Localizer["BaseImageUrl"], Localizer["LasCruseSliderImage1"]),
            Alt = "First Slide",
            Caption = "Slide 1",
            Header = "Slider 1 Header"

        },
        new SliderItemDto{
            Source = String.Format("{0}{1}", Localizer["BaseImageUrl"], Localizer["LasCruseSliderImage2"]),            Alt = "Second Slide",
            Caption = "Slide 2",
            Header = "Slider 2 Header"

        },
        new SliderItemDto{
            Source = String.Format("{0}{1}", Localizer["BaseImageUrl"], Localizer["LasCruseSliderImage3"]),            Alt = "Third Slide",
            Caption = "Slide 3",
            Header = "Slider 3 Header"

        },
    };
        #endregion

        //Localization = LocalizationDropDown.Localization;
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // CHeck if user has Admin ofr Manager Role
        if (user.Identity.IsAuthenticated)
        {

            // Check if MFA Force enable for the user
            force2FAClaim = user.Claims.Where(x => x.Type == "force2fa").FirstOrDefault();
            ID = user.FindFirst(c => c.Type == "sub")?.Value;

            // Check if MFA is already not enable for the user
            amrClaim = user.Claims.Where(x => x.Type == "amr").FirstOrDefault();
            if (force2FAClaim != null && force2FAClaim.Value == mfaForceText)
            {
                if (amrClaim == null || amrClaim.Value != mfaName)
                {
                    // Force redirect to Enabl MFA page
                    await JS.InvokeAsync<string>("navigateToMFA");
                    _logger.LogWarning("warning");

                }
            }
        }

        await base.OnInitializedAsync();
    }

}
